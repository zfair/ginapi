openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore (ginapi)
  description: The modified version of Swagger Petstore for Ginapi.
  license:
    name: MIT
servers:
  - url: '{server}/v1'
    variables:
      server:
        default: http://petstore.swagger.io
        enum:
          - http://localhost:8088
          - http://petstore.swagger.io
tags:
  - name: pets
    description: The pet store
  - name: ignored
    description: An ignored tag
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: integer
            format: int32
            maximum: 100
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      parameters:
        - name: x-tag
          in: header
          required: false
          description: Pet tag
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
    delete:
      summary: Deletes a pet
      operationId: deletePet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid pet value
  /pet/{petId}/uploadImage:
    post:
      tags:
        - pets
        - ignored
      summary: Uploads an image
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: string
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Result:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
